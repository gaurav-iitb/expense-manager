{"ast":null,"code":"var _jsxFileName = \"/Users/gauravsharma/Documents/full stack development all files/udemy react course/project-expense manager /src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseForm.css\";\nimport React, { useState } from \"react\";\nimport { getCombinedModifierFlags } from \"typescript\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  const [enteredtitle, setEnteredTitle] = useState('');\n  const [enteredamount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // instead of making three sets we can make one state comprising all of them \n  // const [userInput,setUserInput] = useState({\n  //     enteredtitle: '',\n  //     enteredamount: '',\n  //     entereddate: '',\n  // })\n\n  const titlechanger = event => {\n    setEnteredTitle(event.target.value); // for three states combined\n    // setEnteredTitle({\n    //     ...userInput,\n    //     enteredtitle: event.target.value,\n    // })\n    //    the above three states function will be sometimes wrong so below is the correct function\n    //    setEnteredTitle((prevState) =>{\n    //        return {...prevState,enteredtitle: event.target.value };\n    //    })\n  };\n\n  const amountchanger = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const datechanger = event => {\n    setEnteredDate(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); //helps in preventing the page from reloading\n\n    const expenseData = {\n      title: enteredtitle,\n      amount: enteredamount,\n      date: new Date(enteredDate)\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titlechanger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountchanger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: datechanger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"ELr8Ts7BLDVfah6UtUHrrZNZxtk=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/gauravsharma/Documents/full stack development all files/udemy react course/project-expense manager /src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","getCombinedModifierFlags","ExpenseForm","enteredtitle","setEnteredTitle","enteredamount","setEnteredAmount","enteredDate","setEnteredDate","titlechanger","event","target","value","amountchanger","datechanger","console","log","submitHandler","preventDefault","expenseData","title","amount","date","Date"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,wBAAT,QAAyC,YAAzC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACK,aAAD,EAAeC,gBAAf,IAAiCN,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACO,WAAD,EAAaC,cAAb,IAA6BR,QAAQ,CAAC,EAAD,CAA3C,CAJmB,CAMnB;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,YAAY,GAAGC,KAAD,IAAW;AAC3BN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD2B,CAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAZD;;AAaA,QAAMC,aAAa,GAAGH,KAAD,IAAW;AAC5BJ,IAAAA,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACH,GAFD;;AAGA,QAAME,WAAW,GAAGJ,KAAD,IAAW;AAC1BF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACH,GAHD;;AAKA,QAAMK,aAAa,GAAIP,KAAD,IAAU;AAC5BA,IAAAA,KAAK,CAACQ,cAAN,GAD4B,CACH;;AAEzB,UAAMC,WAAW,GAAG;AAEhBC,MAAAA,KAAK,EAAEjB,YAFS;AAGhBkB,MAAAA,MAAM,EAAEhB,aAHQ;AAIhBiB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAShB,WAAT;AAJU,KAApB;AAQH,GAXD;;AAYF,sBACE;AAAM,IAAA,QAAQ,EAAEU,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAER;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,MAAzB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,QAAQ,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAC,YAAvB;AAAoC,UAAA,GAAG,EAAC,YAAxC;AAAqD,UAAA,QAAQ,EAAEC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApEQZ,W;;KAAAA,W;AAsET,eAAeA,WAAf","sourcesContent":["import \"./ExpenseForm.css\";\nimport React,{useState} from \"react\";\nimport { getCombinedModifierFlags } from \"typescript\";\n\nfunction ExpenseForm() {\n\n    const [enteredtitle,setEnteredTitle]=useState('')\n    const [enteredamount,setEnteredAmount]=useState('')\n    const [enteredDate,setEnteredDate]=useState('')\n    \n    // instead of making three sets we can make one state comprising all of them \n    // const [userInput,setUserInput] = useState({\n    //     enteredtitle: '',\n    //     enteredamount: '',\n    //     entereddate: '',\n    // })\n\n    const titlechanger= (event) => {\n        setEnteredTitle(event.target.value);\n\n        // for three states combined\n        // setEnteredTitle({\n        //     ...userInput,\n        //     enteredtitle: event.target.value,\n        // })\n        //    the above three states function will be sometimes wrong so below is the correct function\n        //    setEnteredTitle((prevState) =>{\n        //        return {...prevState,enteredtitle: event.target.value };\n        //    })\n    }\n    const amountchanger= (event) => {\n        setEnteredAmount(event.target.value);\n    }\n    const datechanger= (event) => {\n        setEnteredDate(event.target.value);\n        console.log(event.target.value);\n    }\n\n    const submitHandler = (event) =>{\n        event.preventDefault();  //helps in preventing the page from reloading\n\n        const expenseData = {\n\n            title: enteredtitle,\n            amount: enteredamount,\n            date: new Date(enteredDate)\n\n        }\n\n    }\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n            <label>Title</label>\n            <input type=\"text\" onChange={titlechanger} />\n        </div>\n        <div className=\"new-expense__control\">\n            <label>Amount</label>\n            <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountchanger} />\n        </div>\n        <div className=\"new-expense__control\">\n            <label>Date</label>\n            <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={datechanger} />\n        </div>\n      </div>\n\n      <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}