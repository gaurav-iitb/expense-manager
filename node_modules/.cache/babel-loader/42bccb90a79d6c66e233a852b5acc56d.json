{"ast":null,"code":"var _jsxFileName = \"/Users/gauravsharma/Documents/full stack development all files/udemy react course/project-expense manager /src/components/Expenses/Expense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expense.css\";\nimport ExpenseFilter from \"../NewExpense/ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expense(usingpops) {\n  _s();\n\n  const [Year, SetYear] = useState(\"2020\"); //ise newdata function ke andr nhi likh skte baahr hi likhna pdega\n\n  function Newdata(dataentered) {\n    SetYear(dataentered); // console.log('expense.js');\n    // console.log(dataentered);\n  }\n\n  const result = usingpops.expense.filter(oldexpense => {\n    return oldexpense.date.getFullYear().toString() === Year;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        Years: Year,\n        fromexpense: Newdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), result.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"paragraph\",\n        children: \"no expenses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : result.map(expens => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        //key is very important to add with map or else we will face different types of errors or bugs.\n        title: expens.title,\n        amount: expens.amount,\n        date: expens.date\n      }, expens.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expense, \"gwUx3GWI57M/+Csbz5TORH0W5i0=\");\n\n_c = Expense;\nexport default Expense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"sources":["/Users/gauravsharma/Documents/full stack development all files/udemy react course/project-expense manager /src/components/Expenses/Expense.js"],"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expense","usingpops","Year","SetYear","Newdata","dataentered","result","expense","filter","oldexpense","date","getFullYear","toString","length","map","expens","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,eAAP;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AACA,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,MAAD,CAAhC,CAD0B,CACgB;;AAC1C,WAASQ,OAAT,CAAiBC,WAAjB,EAA8B;AAC5BF,IAAAA,OAAO,CAACE,WAAD,CAAP,CAD4B,CAE5B;AACA;AACD;;AAED,QAAMC,MAAM,GAAGL,SAAS,CAACM,OAAV,CAAkBC,MAAlB,CAA0BC,UAAD,IAAgB;AACtD,WAAOA,UAAU,CAACC,IAAX,CAAgBC,WAAhB,GAA8BC,QAA9B,OAA6CV,IAApD;AACD,GAFc,CAAf;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEA,IAAtB;AAA4B,QAAA,WAAW,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,EAGGE,MAAM,CAACO,MAAP,KAAkB,CAAlB,gBACC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAGCP,MAAM,CAACQ,GAAP,CAAYC,MAAD,iBACT,QAAC,WAAD;AACkB;AAChB,QAAA,KAAK,EAAEA,MAAM,CAACC,KAFhB;AAGE,QAAA,MAAM,EAAED,MAAM,CAACE,MAHjB;AAIE,QAAA,IAAI,EAAEF,MAAM,CAACL;AAJf,SACOK,MAAM,CAACG,EADd;AAAA;AAAA;AAAA;AAAA,cADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhCQlB,O;;KAAAA,O;AAiCT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expense.css\";\nimport ExpenseFilter from \"../NewExpense/ExpenseFilter\";\nfunction Expense(usingpops) {\n  const [Year, SetYear] = useState(\"2020\"); //ise newdata function ke andr nhi likh skte baahr hi likhna pdega\n  function Newdata(dataentered) {\n    SetYear(dataentered);\n    // console.log('expense.js');\n    // console.log(dataentered);\n  }\n\n  const result = usingpops.expense.filter((oldexpense) => {\n    return oldexpense.date.getFullYear().toString() === Year;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter Years={Year} fromexpense={Newdata} />\n\n        {result.length === 0 ? (\n          <p className=\"paragraph\">no expenses found</p>\n        ) : (\n          result.map((expens) => (\n            <ExpenseItem\n              key={expens.id} //key is very important to add with map or else we will face different types of errors or bugs.\n              title={expens.title}\n              amount={expens.amount}\n              date={expens.date}\n            />\n          ))\n        )}\n      </Card>\n    </div>\n  );\n}\nexport default Expense;\n"]},"metadata":{},"sourceType":"module"}